import asyncio
import logging
import signal
import sys
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

from core.config import API_TOKEN
from core.database import init_database
from services.alerts.scheduler import schedule_auto_reset
from services.alerts import emergency
from userbot.client import init_userbot
from utils.logger import logger

# –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from bot.handlers.commands import setup_command_handlers
from bot.handlers.callbacks import setup_callback_handlers
from bot.handlers.messages import handle_private_text_message
from bot.handlers.media import setup_media_handlers
from bot.handlers.settings import setup_settings_handlers
from bot.middleware.auth import is_admin

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è graceful shutdown
bot_instance = None
dp_instance = None
userbot_instance = None


async def shutdown(signal_type=None):
    """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
    logger.info(f"üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {signal_type}")

    try:
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–µ–≤–æ–≥
        if hasattr(emergency, 'force_stop_all_alerts'):
            await emergency.force_stop_all_alerts()

        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ userbot
        if userbot_instance:
            await userbot_instance.disconnect()
            logger.info("‚úÖ Userbot –æ—Ç–∫–ª—é—á–µ–Ω")

        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ polling
        if dp_instance and bot_instance:
            await dp_instance.stop_polling()
            await bot_instance.session.close()
            logger.info("‚úÖ Bot –æ—Ç–∫–ª—é—á–µ–Ω")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏: {e}")

    logger.info("üëã Payments Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    global bot_instance, dp_instance, userbot_instance

    try:
        logger.info("=" * 50)
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ Payments Bot v2.0...")
        logger.info("=" * 50)

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
        logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        init_database()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è aiogram-–±–æ—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        logger.info("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞...")
        bot_instance = Bot(
            token=API_TOKEN,
            default=DefaultBotProperties(
                parse_mode=ParseMode.HTML
            )
        )
        dp_instance = Dispatcher(storage=MemoryStorage())

        # –ü–µ—Ä–µ–¥–∞—ë–º bot –≤ emergency –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
        emergency.bot = bot_instance

        # === –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ ===
        logger.info("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")

        # 1. –ö–æ–º–∞–Ω–¥—ã (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–µ—Ä–≤—ã–º–∏)
        setup_command_handlers(dp_instance)

        # 2. Callback —Ö–µ–Ω–¥–ª–µ—Ä—ã (–∫–Ω–æ–ø–∫–∏)
        setup_callback_handlers(dp_instance)

        # 3. Settings —Ö–µ–Ω–¥–ª–µ—Ä—ã (FSM)
        setup_settings_handlers(dp_instance)

        # 4. Media —Ö–µ–Ω–¥–ª–µ—Ä—ã (—Ñ–æ—Ç–æ, –¥–æ–∫—É–º–µ–Ω—Ç—ã, –∏ —Ç.–¥.)
        setup_media_handlers(dp_instance)

        # 5. –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –∫–æ–Ω—Ü–µ, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–ª–∏ –∫–æ–º–∞–Ω–¥—ã)
        dp_instance.message.register(
            handle_private_text_message,
            lambda m: (
                    m.chat.type == "private" and
                    is_admin(m.from_user.id) and
                    m.text and
                    not m.text.startswith('/') and
                    not m.photo and
                    not m.document and
                    not m.voice and
                    not m.video and
                    not m.sticker
            )
        )

        logger.info("‚úÖ –í—Å–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

        # === –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ ===

        # –ó–∞–ø—É—Å–∫ userbot —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
        logger.info("üì± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è userbot...")
        try:
            userbot_instance = await init_userbot()
            if userbot_instance:
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ userbot
                from userbot.handlers import setup_userbot_handlers
                setup_userbot_handlers(userbot_instance)

                # –ó–∞–ø—É—Å–∫–∞–µ–º userbot –≤ —Ñ–æ–Ω–µ
                asyncio.create_task(userbot_instance.run_until_disconnected())
                logger.info("‚úÖ Userbot –∑–∞–ø—É—â–µ–Ω —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏")
            else:
                logger.warning("‚ö†Ô∏è Userbot –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ API_ID/API_HASH)")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ userbot: {e}")

        # –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞–≤—Ç–æ—Å–±—Ä–æ—Å–∞
        logger.info("‚è∞ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞–≤—Ç–æ—Å–±—Ä–æ—Å–∞...")
        try:
            asyncio.create_task(schedule_auto_reset())
            logger.info("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç—Ä–µ–≤–æ–≥
        logger.info("üö® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç—Ä–µ–≤–æ–≥...")
        try:
            from services.alerts.emergency import check_emergency_conditions
            await check_emergency_conditions()
            logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–≤–æ–≥ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–µ–≤–æ–≥: {e}")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ –∞–¥–º–∏–Ω—É
        try:
            from core.config import ADMIN_CHAT_ID
            await bot_instance.send_message(
                ADMIN_CHAT_ID,
                "üéâ <b>Payments Bot v2.0 –∑–∞–ø—É—â–µ–Ω!</b>\n\n"
                "‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –∞–∫—Ç–∏–≤–Ω—ã\n"
                "üì° –ì–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É –∫–æ–º–∞–Ω–¥\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã",
                parse_mode="HTML"
            )
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ: {e}")

        # –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        logger.info("=" * 50)
        logger.info("üéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")
        logger.info("üì° –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–π...")
        logger.info("=" * 50)

        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        await dp_instance.start_polling(bot_instance, skip_updates=True)

    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        raise
    finally:
        await shutdown("main_exit")


def signal_handler(sig, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤"""
    logger.info(f"–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {sig}")
    asyncio.create_task(shutdown(sig))
    sys.exit(0)


if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)

    try:
        # –ó–∞–ø—É—Å–∫ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)